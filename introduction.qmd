---
title: ""
lang: fr
back-to-top-navigation: true
format:
  html:
    page-layout: custom 
---


```{r}
#| echo: FALSE
#| include: FALSE

library(dplyr)
library(readxl)
library(stringr)

intro <- read_xlsx("data/Introduction.xlsx") %>%
  filter(!is.na(Numero), !is.na(Questions), !is.na(Reponses)) %>%   # on garde que les lignes complètes
  mutate(
    Numero = as.character(Numero)                                   # on garde le format textuel (1.0, 1.1)
  ) %>%
  arrange(Numero, Questions)

questions_list <- intro %>%
  group_by(Numero, Questions, Style, Condition) %>%
  summarise(reponses = list(Reponses), .groups = "drop") %>%
  arrange(Numero)

questions_list

```


```{=html}

<script>window.currentProgressStep = 1;</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const bar = document.getElementById('progress-bar');
  if (!bar) return;

  // priorité : variable JS définie dans la page
  let step = window.currentProgressStep || null;

  // fallback : déduire depuis URL (si tu le veux)
  if (!step) {
    const m = window.location.pathname.match(/(\d+)/);
    if (m) step = parseInt(m[1], 10);
  }

  if (!step || isNaN(step)) step = 1;

  const active = bar.querySelector(`.progress-item[data-step="${step}"]`);
  if (active) active.classList.add('active');
});
</script>

<div style="margin-left:10%; margin-right:10%;">
{{< include _includes/progression.html >}}
</div>
```

```{=html}
<div style="border: 1px solid #f6f3f3;
            margin-left:10%;
            margin-right: 10%;">
            
   <div style="color: red; font-size:0.8rem; margin-top: 3px; margin-bottom: 40px; margin-left: 10px;">*Champs obligatoires</div>          
            

        <div style="margin-left:4%;
                    margin-right:4%;
                    text-align: left;
                    font-family: Arial,sans-serif, monospace;
                    color: rgba(41,37,116,1) !important;
                    font-weight: bold;
                    margin-bottom: 70px;"
                    >
            <div> Centre d'études et d'expertise sur les risques, l'environnement, la mobilité et l'aménagement, le Cerema accompagne les       collectivités pour anticiper les effets du changement climatique, réduire la vulnérabilité et renforcer la résilience territoriale.
            </div>
            
            <br>
            
            <div> Votre collectivité / groupement de collectivités a récemment adhéré au Cerema et bénéficie à ce titre d’une relation partenariale renforcée avec notre établissement. Afin de mieux connaître les forces et besoins de votre territoire sur les principaux leviers de la transition et de l’adaptation au changement climatique, il vous est proposé de réaliser ce diagnostic en ligne. A l'issue du questionnaire, vous disposerez d’un rapport avec des pistes de réflexion et exemples de solutions concrètes en lien avec nos champs d’actions. Des échanges complémentaires avec votre référent permettront de préciser, au besoin, vos priorités d’actions.
            </div>
            
            <br>
            
            <div>
        Le Cerema s'engage à observer et à faire observer la plus stricte confidentialité à l’égard des informations délivrées dans le présent questionnaire. Le Cerema s’engage à ce que ces informations soient traitées avec le même degré de protection qu’il accorde à ses propres informations confidentielles et ne soient communiquées qu'aux seuls membres de son personnel permanent ou temporaire ayant à les connaitre.
            </div>
        
        </div>
```

```{=html}

<script>
function handleCondition(event) {
  const value = event.target.value;

  document.querySelectorAll('.question-block[data-condition]').forEach(block => {
    block.style.display = 'none';
  });

  document.querySelectorAll(`.question-block[data-condition='${value}']`).forEach(block => {
    block.style.display = 'block';
  });
}
</script>

```

```{r, results='asis'}
#| echo: FALSE

# Boucle sur les questions
for (i in seq_len(nrow(questions_list))) {
  numero   <- questions_list$Numero[i]
  question <- questions_list$Questions[i]
  style    <- ifelse(is.na(questions_list$Style[i]), "radio", questions_list$Style[i])
  condition <- questions_list$Condition[i]
  reponses <- unlist(questions_list$reponses[i])

  # Attribut conditionnel
  condition_attr <- if (!is.na(condition)) sprintf("data-condition='%s'", condition) else ""
  display_style <- if (!is.na(condition)) "display:none;" else ""

  cat(sprintf("<div class='question-block' %s style='%s margin:20px 0; padding:15px; margin-left:4%%; margin-right:4%%;'>\n", condition_attr, display_style))
  cat(sprintf("  <p style='font-weight:bold; font-size:1rem; color:#293574;'>%s — %s</p>\n", numero, question))

  if (style == "radio") {
    for (j in seq_along(reponses)) {
      id <- paste0("q", numero, "_", j)
      onchange <- if (numero == 1) "onchange='handleCondition(this.value)'" else ""
      cat(sprintf(
        "  <input type='radio' id='%s' name='q%s' value='%s' %s>
         <label for='%s' style='display:inline-block; margin:4px 15px 4px 0; border-color:rgba(239,119,87,1); color:#293574; font-weight:bold; opacity:0.9;'>%s</label>\n",
        id, numero, reponses[j], onchange, id, reponses[j]
      ))
    }
  } else if (style == "checkbox") {
    for (j in seq_along(reponses)) {
      id <- paste0("q", numero, "_", j)
      cat(sprintf(
        "  <input type='checkbox' id='%s' name='q%s' value='%s'>
         <label for='%s' style='display:inline-block; margin:4px 10px 4px 0; color:#293574; font-weight:bold; opacity:0.9;'>%s</label>\n",
        id, numero, reponses[j], id, reponses[j]
      ))
    }
  } else if (style == "textarea") {
    cat(sprintf(
      "  <textarea name='q%s' rows='4' cols='50' style='width:100%%; margin-top:6px; color:#293574; font-weight:bold; opacity:0.9;'></textarea>\n",
      numero
    ))
  } else if (style == "select") {
    onchange <- if (numero == 1) "onchange='handleCondition(event)'" else ""
    cat(sprintf(
      "  <select name='q%s' %s style='width:100%%; margin-top:6px; border-color:rgba(239,119,87,1); border-radius:6px; height:35px; color:#293574; font-weight:bold; opacity:0.9;'>\n",
      numero, onchange
    ))
    for (r in reponses) {
      cat(sprintf("    <option value='%s'>%s</option>\n", r, r))
    }
    cat("  </select>\n")
  }

  cat("</div>\n\n")
}

cat("</body>\n</html>")


```

```{=html}
</div>

```

```{=html}
{{< include _includes/custom_footer.html >}}

 <button style="background-color: #ef7757;
  border-radius: 8px;
  font-size: 1.3rem;
  padding-left: 15px;
  padding-right: 15px;
  margin-right: 6px;
  font-family: normal;
  border-color: coral;"
  onclick="window.location.href='dynamique_transition_territoriale.html';"> Suivant > </button>
  
  </div>

```